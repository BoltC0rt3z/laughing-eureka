{"version":3,"sources":["application/jokes/actions/categoryActions.js","application/jokes/reducer/categoryReducer.js","application/jokes/actions/jokesActions.js","application/jokes/reducer/jokesReducer.js","application/jokes/actions/searchActions.js","application/jokes/reducer/searchReducer.js","root/rootReducer.js","api/index.js","application/jokes/saga.js","root/rootSagas.js","root/store/index.js","components/header/index.js","components/loader/index.js","application/jokes/category-list.jsx","application/jokes/jokes-modal.jsx","application/jokes/categories.js","application/jokes/jokes-container.js","components/searchForm/index.js","components/card/index.js","application/jokes/search.jsx","application/jokes/search-container.js","application/index.js","serviceWorker.js","index.js"],"names":["LOAD_CATEGORIES","loadCategoriesSuccessful","categories","type","loadCategoriesFailed","error","initialState","loading","categoryReducer","state","arguments","length","undefined","action","Object","objectSpread","LOAD_JOKE","loadJokeSuccessful","joke","loadJokeFailed","jokeReducer","LOAD_SEARCH","loadSearchSuccessful","searchResult","loadSearchFailed","jokes","searchReducer","rootReducer","combineReducers","baseURL","fetchCategories","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","request","get","concat","sent","abrupt","body","stop","apply","this","fetchCategoryJoke","_ref2","_callee2","category","_context2","_x","searchJokes","_ref3","_callee3","query","_context3","_x2","handleCategoriesLoad","watchCategoriesLoad","handleRandomCategoryLoad","watchRandomCategoryLoad","handleSearchLoad","watchSearchLoad","call","put","t0","toString","_marked","takeLatest","_marked2","_marked3","_context4","_marked4","_context5","_marked5","_context6","_marked6","rootSaga","all","rootSagas_marked","sagaMiddleware","createSagaMiddleware","configureStore","store","createStore","compose","applyMiddleware","composeWithDevTools","run","Header","styled","header","_templateObject","PreLoader","react_default","createElement","Loader","active","size","inline","Content","div","category_list_templateObject","Section","section","_templateObject2","Image","img","_templateObject3","CategoryItem","button","_templateObject4","CategoryList","handleOpenModal","loader","map","key","onClick","src","JokesModal","open","nextJokeStatus","loadNextJoke","handleCloseModal","getCategory","Modal","onClose","image","Image_Image","wrapped","icon_url","Description","Dimmer","value","Actions","Button","color","primary","icon","labelPosition","content","Categories","props","_useState","useState","_useState2","slicedToArray","status","setStatus","_useState3","_useState4","setNextJokeStatus","useEffect","loadCategories","jokeLoading","category_list","loadJoke","jokes_modal","connect","dispatch","Form","form","searchForm_templateObject","TextField","input","searchForm_templateObject2","SearchForm","onSubmit","setQuery","class","event","preventDefault","onChange","target","placeholder","Container","card_templateObject","JokesCard","result","index","Message","id","Search","loadSearch","searchForm","card","App","es","react","jokes_container","search_container","Component","Boolean","window","location","hostname","match","ReactDOM","render","application","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef9e41c4.chunk.js","sourcesContent":["const LOAD_CATEGORIES = 'LOAD_CATEGORIES';\nconst LOAD_CATEGORIES_SUCCESS = 'LOAD_CATEGORIES_SUCCESS';\nconst LOAD_CATEGORIES_FAIL = 'LOAD_CATEGORIES_FAIL';\n\nconst loadCategories = () => ({\n    type: LOAD_CATEGORIES,\n})\n\nconst loadCategoriesSuccessful = categories => ({\n    type: LOAD_CATEGORIES_SUCCESS,\n    categories,\n})\n\nconst loadCategoriesFailed = error => ({\n    type: LOAD_CATEGORIES_FAIL,\n    error,\n})\n\nexport { LOAD_CATEGORIES, LOAD_CATEGORIES_SUCCESS, LOAD_CATEGORIES_FAIL, loadCategories, loadCategoriesSuccessful, loadCategoriesFailed };\n","import { LOAD_CATEGORIES, LOAD_CATEGORIES_SUCCESS, LOAD_CATEGORIES_FAIL } from \"../actions/categoryActions\";\n\nconst initialState = {\n    loading: false,\n    categories: [],\n    error: \"\"\n}\n\nconst categoryReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_CATEGORIES:\n            return {\n                ...state,\n                loading: true,\n                error: \"\"\n            }\n        case LOAD_CATEGORIES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                categories: action.categories\n            }\n        case LOAD_CATEGORIES_FAIL:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default categoryReducer;\n","const LOAD_JOKE = 'LOAD_JOKE';\nconst LOAD_JOKE_SUCCESS = 'LOAD_JOKE_SUCCESS';\nconst LOAD_JOKE_FAIL = 'LOAD_JOKE_FAIL';\n\nconst loadJoke = category => ({\n    type: LOAD_JOKE,\n    category,\n})\n\nconst loadJokeSuccessful = joke => ({\n    type: LOAD_JOKE_SUCCESS,\n    joke,\n})\n\nconst loadJokeFailed = error => ({\n    type: LOAD_JOKE_FAIL,\n    error,\n})\n\nexport {LOAD_JOKE, LOAD_JOKE_SUCCESS, LOAD_JOKE_FAIL, loadJoke, loadJokeSuccessful, loadJokeFailed };\n","import { LOAD_JOKE, LOAD_JOKE_SUCCESS, LOAD_JOKE_FAIL } from \"../actions/jokesActions\";\n\nconst initialState = {\n    joke: [],\n    error: \"\",\n    loading: false,\n\n}\n\nconst jokeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_JOKE:\n            return {\n                ...state,\n                loading: true,\n                error: \"\",\n            }\n        case LOAD_JOKE_SUCCESS:\n            return {\n                ...state,\n                joke: action.joke,\n                loading: false,\n                error: \"\"\n            }\n        case LOAD_JOKE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n};\n\nexport default jokeReducer;\n","const LOAD_SEARCH = 'LOAD_SEARCH';\nconst LOAD_SEARCH_SUCCESS = 'LOAD_SEARCH_SUCCESS';\nconst LOAD_SEARCH_FAIL = 'LOAD_SEARCH_FAIL';\n\nconst loadSearch = (query) => ({\n    type: LOAD_SEARCH,\n    query\n})\n\nconst loadSearchSuccessful =  searchResult => ({\n    type: LOAD_SEARCH_SUCCESS,\n    searchResult,\n})\n\nconst loadSearchFailed = error => ({\n    type: LOAD_SEARCH_FAIL,\n    error,\n})\n\nexport {LOAD_SEARCH, LOAD_SEARCH_SUCCESS, LOAD_SEARCH_FAIL, loadSearch, loadSearchSuccessful, loadSearchFailed };\n","import { LOAD_SEARCH, LOAD_SEARCH_SUCCESS, LOAD_SEARCH_FAIL } from \"../actions/searchActions\";\n\nconst initialState = {\n    jokes: [],\n    error: \"\",\n    loading: false,\n}\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_SEARCH:\n            return {\n                ...state,\n                loading: true,\n                error: \"\",\n            }\n        case LOAD_SEARCH_SUCCESS:\n            return {\n                ...state,\n                jokes: action.searchResult,\n                loading: false,\n                error: \"\"\n            }\n        case LOAD_SEARCH_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n};\n\nexport default searchReducer;\n","import { combineReducers } from 'redux';\nimport categoryReducer from '../application/jokes/reducer/categoryReducer';\nimport jokeReducer from '../application/jokes/reducer/jokesReducer';\nimport searchReducer from '../application/jokes/reducer/searchReducer';\n\n\n\nconst rootReducer = combineReducers({\n    categories: categoryReducer,\n    joke: jokeReducer,\n    searchResult: searchReducer,\n})\n\nexport default rootReducer;\n","import request from \"superagent\";\n\nconst baseURL = \"https://api.chucknorris.io\"\n\nconst fetchCategories = async () => {\n    const response = await request.get(`${baseURL}/jokes/categories`);\n    return response.body;\n}\n\nconst fetchCategoryJoke = async (category) => {\n    if (category) {\n        const response = await request.get(`${baseURL}/jokes/random?category=${category}`);\n        return response.body;\n    }\n}\n\nconst searchJokes = async (query) => {\n    if (query) {\n        const response = await request.get(`${baseURL}/jokes/search?query=${query}`);\n        return response.body;\n    }\n}\nexport { fetchCategories, fetchCategoryJoke, searchJokes };\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { fetchCategories, fetchCategoryJoke, searchJokes } from \"../../api\"\nimport { LOAD_CATEGORIES, loadCategoriesSuccessful, loadCategoriesFailed } from \"./actions/categoryActions\"\nimport { LOAD_JOKE, loadJokeSuccessful, loadJokeFailed } from \"./actions/jokesActions\"\nimport { LOAD_SEARCH, loadSearchSuccessful, loadSearchFailed } from \"./actions/searchActions\"\n\n\n// Category Worker saga\nfunction* handleCategoriesLoad() {\n    try {\n        const categories = yield call(fetchCategories)\n        yield put(loadCategoriesSuccessful(categories))\n    } catch (error) {\n        yield put(loadCategoriesFailed(error.toString()))\n    }\n}\n\n// Category Watcher Saga\nexport function* watchCategoriesLoad() {\n    yield takeLatest(LOAD_CATEGORIES, handleCategoriesLoad)\n}\n\n\n// Joke Worker saga\nfunction* handleRandomCategoryLoad(action) {\n    try {\n        const joke = yield call(fetchCategoryJoke, action.category)\n        yield put(loadJokeSuccessful(joke))\n    } catch (error) {\n        yield put(loadJokeFailed(error.toString()))\n    }\n}\n\n// Joke Watcher Saga\nexport function* watchRandomCategoryLoad() {\n    yield takeLatest(LOAD_JOKE, handleRandomCategoryLoad)\n}\n\n// Search Worker saga\nfunction* handleSearchLoad(action) {\n    try {\n        const jokes = yield call(searchJokes, action.query)\n        yield put(loadSearchSuccessful(jokes))\n    } catch (error) {\n        yield put(loadSearchFailed(error.toString()))\n    }\n}\n\n// Search Watcher Saga\nexport function* watchSearchLoad() {\n    yield takeLatest(LOAD_SEARCH, handleSearchLoad)\n}\n","import { all } from 'redux-saga/effects';\nimport { watchCategoriesLoad, watchRandomCategoryLoad, watchSearchLoad } from \"../application/jokes/saga\";\n\nfunction* rootSaga() {\n  yield all([watchCategoriesLoad(), watchRandomCategoryLoad(), watchSearchLoad()])\n}\n\nexport default rootSaga;\n","import { createStore, compose, applyMiddleware, } from \"redux\";\nimport rootReducer from \"../rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../rootSagas\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst configureStore = () => {\n    const store = createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(sagaMiddleware),\n            composeWithDevTools(),\n        ),\n    );\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n\nexport default configureStore;\n","import styled from \"styled-components\";\n\nconst Header = styled.header`\n    font-size: 1.6rem;\n    font-family: 'Pacifico';\n    text-align: left;\n    padding: 10px 20px;\n    color: #424242;\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.1);\n    position: sticky;\n    background: #fff;\n`;\n\nexport default Header;\n","import React from 'react'\nimport { Loader } from 'semantic-ui-react'\n\nconst PreLoader = () => <Loader active size='large' inline='centered'/>\n\nexport default PreLoader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PreLoader from \"../../components/loader\";\n\nconst Content = styled.div`\n  max-width: 1200px;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Section = styled.section`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  padding: 25px;\n  grid-gap: 15px;\n  grid-auto-flow: dense;\n  align-items: stretch;\n  width: 100%;\n`;\nconst Image = styled.img`\n  width: 10%;\n  height: 10%;\n  object-fit: cover;\n  border-radius: 2px;\n  float: left;\n`;\n\nconst CategoryItem = styled.button`\n  background-color: DodgerBlue;\n  border: none;\n  color: white;\n  padding: 12px 16px;\n  font-size: 16px;\n  cursor: pointer;\n`;\n\nconst CategoryList = ({ categories, loading, handleOpenModal }) => (\n  <Content>\n    <h1>Categories</h1>\n    <Section>\n      {loading ? (\n        <PreLoader />\n      ) : (\n        categories.map(category => (\n          <CategoryItem key={category} onClick={handleOpenModal(category)}>\n            <Image src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\" />\n            {category}\n          </CategoryItem>\n        ))\n      )}\n    </Section>\n  </Content>\n);\n\nexport default CategoryList;\n","import React from \"react\";\nimport { Button, Image, Modal, Dimmer } from \"semantic-ui-react\";\nimport PreLoader from \"../../components/loader\";\n\nconst JokesModal = ({\n  open,\n  nextJokeStatus,\n  joke,\n  loading,\n  loadNextJoke,\n  handleCloseModal,\n  getCategory\n}) =>\n  loading && !nextJokeStatus ? (\n    <PreLoader />\n  ) : (\n    <Modal size=\"tiny\" open={open} onClose={handleCloseModal}>\n      <Modal.Header>Chuck Norris {getCategory(joke)} Jokes</Modal.Header>\n      <Modal.Content image>\n        <Image wrapped size=\"tiny\" src={joke.icon_url} />\n        <Modal.Description>\n          {loading && nextJokeStatus ? (\n            <Dimmer active>\n              <PreLoader />\n            </Dimmer>\n          ) : (\n            <p>{joke.value}</p>\n          )}\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button\n          primary\n          icon=\"checkmark\"\n          labelPosition=\"right\"\n          content=\"Another one?\"\n          onClick={loadNextJoke(getCategory(joke))}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n\nexport default JokesModal;\n","import React, { useEffect, useState } from 'react';\nimport CategoryList from \"./category-list\";\nimport JokesModal from \"./jokes-modal\";\n\nconst Categories = (props) => {\n\n    const [status, setStatus] = useState(false);\n\n    const [nextJokeStatus, setNextJokeStatus] = useState(false);\n\n    useEffect(() => {\n        props.loadCategories();\n    }, []);\n\n    const handleOpenModal = (category) => () => {\n        props.loadJoke(category)();\n        setStatus(true)\n    }\n\n    const handleNextJoke = (category) => () => {\n        setNextJokeStatus(true)\n        props.loadJoke(category)();\n    }\n\n    const handleCloseModal = () => {\n        setStatus(false)\n        setNextJokeStatus(false)\n    }\n\n    const getCategory = (joke) => joke.category ? joke.category[0] : joke.category == null ? \"explicit\" : \"\";\n\n    const { categories, loading, joke, jokeLoading } = props;\n    return (\n        <div>\n            <CategoryList categories={categories} loading={loading} handleOpenModal={handleOpenModal} />\n            <JokesModal open={status} nextJokeStatus={nextJokeStatus} joke={joke} loading={jokeLoading}\n                getCategory={getCategory} loadNextJoke={handleNextJoke} handleCloseModal={handleCloseModal} />\n        </div>\n    );\n}\n\nexport default Categories;\n","import { connect } from \"react-redux\";\nimport Categories from \"./categories\";\nimport { loadCategories } from \"./actions/categoryActions\"\nimport { loadJoke } from \"./actions/jokesActions\"\n\nconst mapStateToProps = (state) => ({\n    categories: state.categories.categories,\n    loading: state.categories.loading,\n    error: state.categories.error,\n    joke: state.joke.joke,\n    jokeLoading: state.joke.loading,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadCategories: () => dispatch(loadCategories()),\n    loadJoke: (category) => () => dispatch(loadJoke(category))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React, { useState } from 'react'\nimport styled from \"styled-components\";\nimport { func } from \"prop-types\"\n\nconst Form = styled.form`\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n  font-family: Montserrat;\n`;\n\nconst TextField = styled.input`\n    width: 500px;\n    height: 40px;\n    outline: none;\n    border: 1px solid lightgray;\n    border-radius: 3px;\n    padding: 20px;\n`;\n\nconst SearchForm = ({ onSubmit }) => {\n    const [query, setQuery] = useState('');\n\n    const handleChange = (event) => {\n        setQuery(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        onSubmit(query);\n    }\n\n    return (\n        <Form class=\"text-input\" onSubmit={handleSubmit}>\n            <TextField type=\"text\" onChange={handleChange} value={query} placeholder=\"Try searching for a joke in here!\" />\n        </Form>\n    )\n}\n\nSearchForm.propTypes = {\n    onSubmit: func\n}\n\nexport default SearchForm;\n","import React from 'react'\nimport styled from \"styled-components\";\nimport PreLoader from '../loader'\nimport { Message } from 'semantic-ui-react'\n\nconst Container = styled.div`\n  margin-top: 20px;\n  display: block;\n  padding: 25px 50px;\n`\nconst JokesCard = ({ loading, jokes }) => (\n    <Container> {\n        loading ? (\n            <PreLoader />\n        ) :\n        jokes.result ? (\n            jokes.result.map((joke, index) => (\n            <Message\n            key={joke.id}\n            content={`${index + 1}.  ${joke.value}`}\n            />))\n        ) : ([])\n    }\n    </Container>\n)\n\nexport default JokesCard;\n","import React from \"react\";\nimport SearchForm from \"../../components/searchForm\";\nimport JokesCard from \"../../components/card\";\n\nconst Search = props => {\n  const { loading, jokes, loadSearch } = props;\n\n  return (\n    <div>\n      <SearchForm onSubmit={loadSearch} />\n      <JokesCard loading={loading} jokes={jokes} />\n    </div>\n  );\n};\n\nexport default Search;\n","import { connect } from \"react-redux\";\nimport { loadSearch } from \"./actions/searchActions\"\nimport Search from \"./search\"\n\n\nconst mapStateToProps = (state) => ({\n    loading: state.searchResult.loading,\n    jokes: state.searchResult.jokes,\n    error: state.searchResult.error,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadSearch: (value) => dispatch(loadSearch(value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component, Fragment } from 'react';\nimport { Provider } from \"react-redux\"\nimport configureStore from \"../root/store\"\nimport  Header from \"../components/header\"\nimport Categories  from \"./jokes/jokes-container\"\nimport Search from './jokes/search-container'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Fragment>\n          <Header>Laughing Eureka!</Header>\n          <Categories />\n          <Search />\n        </Fragment>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './application';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}